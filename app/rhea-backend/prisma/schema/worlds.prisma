enum WorldCalendarType {
    COUNTUP
    EARTH
    PF2E
    RIMWORLD
    EXETHER
}

enum WorldAccessMode {
    Private
    PublicRead
    PublicEdit
}

enum WorldEventType {
    SCENE
    OTHER
}

enum WorldEventField {
    EventIcon
    TargetActors
    MentionedActors
    ExternalLink
}

model World {
    id        String   @id @unique @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    name        String
    description String            @default("")
    actors      Actor[]
    events      WorldEvent[]
    articles    WikiArticle[]
    tags        Tag[]
    calendar    WorldCalendarType @default(COUNTUP)
    timeOrigin  BigInt            @default(0)

    owner            User                @relation(fields: [ownerId], references: [id], onDelete: Cascade)
    ownerId          String
    accessMode       WorldAccessMode     @default(Private)
    collaborators    CollaboratingUser[]
    worldEventTracks WorldEventTrack[]
}

model WorldEvent {
    id        String   @id @unique @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    type            WorldEventType
    icon            String            @default("default")
    name            String
    timestamp       BigInt
    revokedAt       BigInt?
    description     String            @default("")
    descriptionRich String            @default("")
    customName      Boolean           @default(false)
    externalLink    String            @default("")
    extraFields     WorldEventField[]

    mentions    Mention[] @relation("EventMentionSource")
    mentionedIn Mention[] @relation("EventMentionTarget")

    deltaStates WorldEventDelta[]

    world             World            @relation(fields: [worldId], references: [id], onDelete: Cascade)
    track             WorldEventTrack? @relation(fields: [worldEventTrackId], references: [id], onDelete: Cascade)
    worldId           String
    worldEventTrackId String?
}

model WorldEventDelta {
    id        String   @id @unique @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
    timestamp BigInt

    name            String?
    description     String?
    descriptionRich String?

    worldEventId String
    worldEvent   WorldEvent @relation(fields: [worldEventId], references: [id], onDelete: Cascade)
}

model WorldEventTrack {
    id        String   @id @unique @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    name     String
    position Int
    visible  Boolean @default(true)

    events WorldEvent[]

    world   World  @relation(fields: [worldId], references: [id], onDelete: Cascade)
    worldId String
}
