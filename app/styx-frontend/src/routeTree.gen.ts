/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as LimboImport } from './routes/limbo'
import { Route as HomeImport } from './routes/home'
import { Route as AdminImport } from './routes/admin'
import { Route as IndexImport } from './routes/index'
import { Route as SecretSpinnyImport } from './routes/secret/spinny'
import { Route as SecretMusicImport } from './routes/secret/music'
import { Route as WorldWorldIdWorldImport } from './routes/world.$worldId/_world'
import { Route as WorldWorldIdWorldSettingsImport } from './routes/world.$worldId/_world.settings'
import { Route as WorldWorldIdWorldOverviewImport } from './routes/world.$worldId/_world.overview'
import { Route as WorldWorldIdWorldActorsImport } from './routes/world.$worldId/_world.actors'
import { Route as WorldWorldIdWorldWikiWikiImport } from './routes/world.$worldId/_world.wiki/_wiki'
import { Route as WorldWorldIdWorldTimelineTimelineImport } from './routes/world.$worldId/_world.timeline/_timeline'
import { Route as WorldWorldIdWorldWikiWikiIndexImport } from './routes/world.$worldId/_world.wiki/_wiki.index'
import { Route as WorldWorldIdWorldWikiWikiArticleIdImport } from './routes/world.$worldId/_world.wiki/_wiki.$articleId'
import { Route as WorldWorldIdWorldTimelineTimelineOutlinerImport } from './routes/world.$worldId/_world.timeline/_timeline/outliner'
import { Route as WorldWorldIdWorldTimelineTimelineEventCreateImport } from './routes/world.$worldId/_world.timeline/_timeline/event.create'
import { Route as WorldWorldIdWorldTimelineTimelineEventEventIdImport } from './routes/world.$worldId/_world.timeline/_timeline/event.$eventId'
import { Route as WorldWorldIdWorldTimelineTimelineActorActorIdImport } from './routes/world.$worldId/_world.timeline/_timeline/actor.$actorId'
import { Route as WorldWorldIdWorldTimelineTimelineDeltaCreateEventIdImport } from './routes/world.$worldId/_world.timeline/_timeline/delta.create.$eventId'
import { Route as WorldWorldIdWorldTimelineTimelineDeltaDeltaIdEventIdImport } from './routes/world.$worldId/_world.timeline/_timeline/delta.$deltaId.$eventId'

// Create Virtual Routes

const WorldWorldIdImport = createFileRoute('/world/$worldId')()
const WorldWorldIdWorldWikiImport = createFileRoute(
  '/world/$worldId/_world/wiki',
)()
const WorldWorldIdWorldTimelineImport = createFileRoute(
  '/world/$worldId/_world/timeline',
)()

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LimboRoute = LimboImport.update({
  id: '/limbo',
  path: '/limbo',
  getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WorldWorldIdRoute = WorldWorldIdImport.update({
  id: '/world/$worldId',
  path: '/world/$worldId',
  getParentRoute: () => rootRoute,
} as any)

const SecretSpinnyRoute = SecretSpinnyImport.update({
  id: '/secret/spinny',
  path: '/secret/spinny',
  getParentRoute: () => rootRoute,
} as any)

const SecretMusicRoute = SecretMusicImport.update({
  id: '/secret/music',
  path: '/secret/music',
  getParentRoute: () => rootRoute,
} as any)

const WorldWorldIdWorldRoute = WorldWorldIdWorldImport.update({
  id: '/_world',
  getParentRoute: () => WorldWorldIdRoute,
} as any)

const WorldWorldIdWorldWikiRoute = WorldWorldIdWorldWikiImport.update({
  id: '/wiki',
  path: '/wiki',
  getParentRoute: () => WorldWorldIdWorldRoute,
} as any)

const WorldWorldIdWorldTimelineRoute = WorldWorldIdWorldTimelineImport.update({
  id: '/timeline',
  path: '/timeline',
  getParentRoute: () => WorldWorldIdWorldRoute,
} as any)

const WorldWorldIdWorldSettingsRoute = WorldWorldIdWorldSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => WorldWorldIdWorldRoute,
} as any)

const WorldWorldIdWorldOverviewRoute = WorldWorldIdWorldOverviewImport.update({
  id: '/overview',
  path: '/overview',
  getParentRoute: () => WorldWorldIdWorldRoute,
} as any)

const WorldWorldIdWorldActorsRoute = WorldWorldIdWorldActorsImport.update({
  id: '/actors',
  path: '/actors',
  getParentRoute: () => WorldWorldIdWorldRoute,
} as any)

const WorldWorldIdWorldWikiWikiRoute = WorldWorldIdWorldWikiWikiImport.update({
  id: '/_wiki',
  getParentRoute: () => WorldWorldIdWorldWikiRoute,
} as any)

const WorldWorldIdWorldTimelineTimelineRoute =
  WorldWorldIdWorldTimelineTimelineImport.update({
    id: '/_timeline',
    getParentRoute: () => WorldWorldIdWorldTimelineRoute,
  } as any)

const WorldWorldIdWorldWikiWikiIndexRoute =
  WorldWorldIdWorldWikiWikiIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => WorldWorldIdWorldWikiWikiRoute,
  } as any)

const WorldWorldIdWorldWikiWikiArticleIdRoute =
  WorldWorldIdWorldWikiWikiArticleIdImport.update({
    id: '/$articleId',
    path: '/$articleId',
    getParentRoute: () => WorldWorldIdWorldWikiWikiRoute,
  } as any)

const WorldWorldIdWorldTimelineTimelineOutlinerRoute =
  WorldWorldIdWorldTimelineTimelineOutlinerImport.update({
    id: '/outliner',
    path: '/outliner',
    getParentRoute: () => WorldWorldIdWorldTimelineTimelineRoute,
  } as any)

const WorldWorldIdWorldTimelineTimelineEventCreateRoute =
  WorldWorldIdWorldTimelineTimelineEventCreateImport.update({
    id: '/event/create',
    path: '/event/create',
    getParentRoute: () => WorldWorldIdWorldTimelineTimelineRoute,
  } as any)

const WorldWorldIdWorldTimelineTimelineEventEventIdRoute =
  WorldWorldIdWorldTimelineTimelineEventEventIdImport.update({
    id: '/event/$eventId',
    path: '/event/$eventId',
    getParentRoute: () => WorldWorldIdWorldTimelineTimelineRoute,
  } as any)

const WorldWorldIdWorldTimelineTimelineActorActorIdRoute =
  WorldWorldIdWorldTimelineTimelineActorActorIdImport.update({
    id: '/actor/$actorId',
    path: '/actor/$actorId',
    getParentRoute: () => WorldWorldIdWorldTimelineTimelineRoute,
  } as any)

const WorldWorldIdWorldTimelineTimelineDeltaCreateEventIdRoute =
  WorldWorldIdWorldTimelineTimelineDeltaCreateEventIdImport.update({
    id: '/delta/create/$eventId',
    path: '/delta/create/$eventId',
    getParentRoute: () => WorldWorldIdWorldTimelineTimelineRoute,
  } as any)

const WorldWorldIdWorldTimelineTimelineDeltaDeltaIdEventIdRoute =
  WorldWorldIdWorldTimelineTimelineDeltaDeltaIdEventIdImport.update({
    id: '/delta/$deltaId/$eventId',
    path: '/delta/$deltaId/$eventId',
    getParentRoute: () => WorldWorldIdWorldTimelineTimelineRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/limbo': {
      id: '/limbo'
      path: '/limbo'
      fullPath: '/limbo'
      preLoaderRoute: typeof LimboImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/secret/music': {
      id: '/secret/music'
      path: '/secret/music'
      fullPath: '/secret/music'
      preLoaderRoute: typeof SecretMusicImport
      parentRoute: typeof rootRoute
    }
    '/secret/spinny': {
      id: '/secret/spinny'
      path: '/secret/spinny'
      fullPath: '/secret/spinny'
      preLoaderRoute: typeof SecretSpinnyImport
      parentRoute: typeof rootRoute
    }
    '/world/$worldId': {
      id: '/world/$worldId'
      path: '/world/$worldId'
      fullPath: '/world/$worldId'
      preLoaderRoute: typeof WorldWorldIdImport
      parentRoute: typeof rootRoute
    }
    '/world/$worldId/_world': {
      id: '/world/$worldId/_world'
      path: '/world/$worldId'
      fullPath: '/world/$worldId'
      preLoaderRoute: typeof WorldWorldIdWorldImport
      parentRoute: typeof WorldWorldIdRoute
    }
    '/world/$worldId/_world/actors': {
      id: '/world/$worldId/_world/actors'
      path: '/actors'
      fullPath: '/world/$worldId/actors'
      preLoaderRoute: typeof WorldWorldIdWorldActorsImport
      parentRoute: typeof WorldWorldIdWorldImport
    }
    '/world/$worldId/_world/overview': {
      id: '/world/$worldId/_world/overview'
      path: '/overview'
      fullPath: '/world/$worldId/overview'
      preLoaderRoute: typeof WorldWorldIdWorldOverviewImport
      parentRoute: typeof WorldWorldIdWorldImport
    }
    '/world/$worldId/_world/settings': {
      id: '/world/$worldId/_world/settings'
      path: '/settings'
      fullPath: '/world/$worldId/settings'
      preLoaderRoute: typeof WorldWorldIdWorldSettingsImport
      parentRoute: typeof WorldWorldIdWorldImport
    }
    '/world/$worldId/_world/timeline': {
      id: '/world/$worldId/_world/timeline'
      path: '/timeline'
      fullPath: '/world/$worldId/timeline'
      preLoaderRoute: typeof WorldWorldIdWorldTimelineImport
      parentRoute: typeof WorldWorldIdWorldImport
    }
    '/world/$worldId/_world/timeline/_timeline': {
      id: '/world/$worldId/_world/timeline/_timeline'
      path: '/timeline'
      fullPath: '/world/$worldId/timeline'
      preLoaderRoute: typeof WorldWorldIdWorldTimelineTimelineImport
      parentRoute: typeof WorldWorldIdWorldTimelineRoute
    }
    '/world/$worldId/_world/wiki': {
      id: '/world/$worldId/_world/wiki'
      path: '/wiki'
      fullPath: '/world/$worldId/wiki'
      preLoaderRoute: typeof WorldWorldIdWorldWikiImport
      parentRoute: typeof WorldWorldIdWorldImport
    }
    '/world/$worldId/_world/wiki/_wiki': {
      id: '/world/$worldId/_world/wiki/_wiki'
      path: '/wiki'
      fullPath: '/world/$worldId/wiki'
      preLoaderRoute: typeof WorldWorldIdWorldWikiWikiImport
      parentRoute: typeof WorldWorldIdWorldWikiRoute
    }
    '/world/$worldId/_world/timeline/_timeline/outliner': {
      id: '/world/$worldId/_world/timeline/_timeline/outliner'
      path: '/outliner'
      fullPath: '/world/$worldId/timeline/outliner'
      preLoaderRoute: typeof WorldWorldIdWorldTimelineTimelineOutlinerImport
      parentRoute: typeof WorldWorldIdWorldTimelineTimelineImport
    }
    '/world/$worldId/_world/wiki/_wiki/$articleId': {
      id: '/world/$worldId/_world/wiki/_wiki/$articleId'
      path: '/$articleId'
      fullPath: '/world/$worldId/wiki/$articleId'
      preLoaderRoute: typeof WorldWorldIdWorldWikiWikiArticleIdImport
      parentRoute: typeof WorldWorldIdWorldWikiWikiImport
    }
    '/world/$worldId/_world/wiki/_wiki/': {
      id: '/world/$worldId/_world/wiki/_wiki/'
      path: '/'
      fullPath: '/world/$worldId/wiki/'
      preLoaderRoute: typeof WorldWorldIdWorldWikiWikiIndexImport
      parentRoute: typeof WorldWorldIdWorldWikiWikiImport
    }
    '/world/$worldId/_world/timeline/_timeline/actor/$actorId': {
      id: '/world/$worldId/_world/timeline/_timeline/actor/$actorId'
      path: '/actor/$actorId'
      fullPath: '/world/$worldId/timeline/actor/$actorId'
      preLoaderRoute: typeof WorldWorldIdWorldTimelineTimelineActorActorIdImport
      parentRoute: typeof WorldWorldIdWorldTimelineTimelineImport
    }
    '/world/$worldId/_world/timeline/_timeline/event/$eventId': {
      id: '/world/$worldId/_world/timeline/_timeline/event/$eventId'
      path: '/event/$eventId'
      fullPath: '/world/$worldId/timeline/event/$eventId'
      preLoaderRoute: typeof WorldWorldIdWorldTimelineTimelineEventEventIdImport
      parentRoute: typeof WorldWorldIdWorldTimelineTimelineImport
    }
    '/world/$worldId/_world/timeline/_timeline/event/create': {
      id: '/world/$worldId/_world/timeline/_timeline/event/create'
      path: '/event/create'
      fullPath: '/world/$worldId/timeline/event/create'
      preLoaderRoute: typeof WorldWorldIdWorldTimelineTimelineEventCreateImport
      parentRoute: typeof WorldWorldIdWorldTimelineTimelineImport
    }
    '/world/$worldId/_world/timeline/_timeline/delta/$deltaId/$eventId': {
      id: '/world/$worldId/_world/timeline/_timeline/delta/$deltaId/$eventId'
      path: '/delta/$deltaId/$eventId'
      fullPath: '/world/$worldId/timeline/delta/$deltaId/$eventId'
      preLoaderRoute: typeof WorldWorldIdWorldTimelineTimelineDeltaDeltaIdEventIdImport
      parentRoute: typeof WorldWorldIdWorldTimelineTimelineImport
    }
    '/world/$worldId/_world/timeline/_timeline/delta/create/$eventId': {
      id: '/world/$worldId/_world/timeline/_timeline/delta/create/$eventId'
      path: '/delta/create/$eventId'
      fullPath: '/world/$worldId/timeline/delta/create/$eventId'
      preLoaderRoute: typeof WorldWorldIdWorldTimelineTimelineDeltaCreateEventIdImport
      parentRoute: typeof WorldWorldIdWorldTimelineTimelineImport
    }
  }
}

// Create and export the route tree

interface WorldWorldIdWorldTimelineTimelineRouteChildren {
  WorldWorldIdWorldTimelineTimelineOutlinerRoute: typeof WorldWorldIdWorldTimelineTimelineOutlinerRoute
  WorldWorldIdWorldTimelineTimelineActorActorIdRoute: typeof WorldWorldIdWorldTimelineTimelineActorActorIdRoute
  WorldWorldIdWorldTimelineTimelineEventEventIdRoute: typeof WorldWorldIdWorldTimelineTimelineEventEventIdRoute
  WorldWorldIdWorldTimelineTimelineEventCreateRoute: typeof WorldWorldIdWorldTimelineTimelineEventCreateRoute
  WorldWorldIdWorldTimelineTimelineDeltaDeltaIdEventIdRoute: typeof WorldWorldIdWorldTimelineTimelineDeltaDeltaIdEventIdRoute
  WorldWorldIdWorldTimelineTimelineDeltaCreateEventIdRoute: typeof WorldWorldIdWorldTimelineTimelineDeltaCreateEventIdRoute
}

const WorldWorldIdWorldTimelineTimelineRouteChildren: WorldWorldIdWorldTimelineTimelineRouteChildren =
  {
    WorldWorldIdWorldTimelineTimelineOutlinerRoute:
      WorldWorldIdWorldTimelineTimelineOutlinerRoute,
    WorldWorldIdWorldTimelineTimelineActorActorIdRoute:
      WorldWorldIdWorldTimelineTimelineActorActorIdRoute,
    WorldWorldIdWorldTimelineTimelineEventEventIdRoute:
      WorldWorldIdWorldTimelineTimelineEventEventIdRoute,
    WorldWorldIdWorldTimelineTimelineEventCreateRoute:
      WorldWorldIdWorldTimelineTimelineEventCreateRoute,
    WorldWorldIdWorldTimelineTimelineDeltaDeltaIdEventIdRoute:
      WorldWorldIdWorldTimelineTimelineDeltaDeltaIdEventIdRoute,
    WorldWorldIdWorldTimelineTimelineDeltaCreateEventIdRoute:
      WorldWorldIdWorldTimelineTimelineDeltaCreateEventIdRoute,
  }

const WorldWorldIdWorldTimelineTimelineRouteWithChildren =
  WorldWorldIdWorldTimelineTimelineRoute._addFileChildren(
    WorldWorldIdWorldTimelineTimelineRouteChildren,
  )

interface WorldWorldIdWorldTimelineRouteChildren {
  WorldWorldIdWorldTimelineTimelineRoute: typeof WorldWorldIdWorldTimelineTimelineRouteWithChildren
}

const WorldWorldIdWorldTimelineRouteChildren: WorldWorldIdWorldTimelineRouteChildren =
  {
    WorldWorldIdWorldTimelineTimelineRoute:
      WorldWorldIdWorldTimelineTimelineRouteWithChildren,
  }

const WorldWorldIdWorldTimelineRouteWithChildren =
  WorldWorldIdWorldTimelineRoute._addFileChildren(
    WorldWorldIdWorldTimelineRouteChildren,
  )

interface WorldWorldIdWorldWikiWikiRouteChildren {
  WorldWorldIdWorldWikiWikiArticleIdRoute: typeof WorldWorldIdWorldWikiWikiArticleIdRoute
  WorldWorldIdWorldWikiWikiIndexRoute: typeof WorldWorldIdWorldWikiWikiIndexRoute
}

const WorldWorldIdWorldWikiWikiRouteChildren: WorldWorldIdWorldWikiWikiRouteChildren =
  {
    WorldWorldIdWorldWikiWikiArticleIdRoute:
      WorldWorldIdWorldWikiWikiArticleIdRoute,
    WorldWorldIdWorldWikiWikiIndexRoute: WorldWorldIdWorldWikiWikiIndexRoute,
  }

const WorldWorldIdWorldWikiWikiRouteWithChildren =
  WorldWorldIdWorldWikiWikiRoute._addFileChildren(
    WorldWorldIdWorldWikiWikiRouteChildren,
  )

interface WorldWorldIdWorldWikiRouteChildren {
  WorldWorldIdWorldWikiWikiRoute: typeof WorldWorldIdWorldWikiWikiRouteWithChildren
}

const WorldWorldIdWorldWikiRouteChildren: WorldWorldIdWorldWikiRouteChildren = {
  WorldWorldIdWorldWikiWikiRoute: WorldWorldIdWorldWikiWikiRouteWithChildren,
}

const WorldWorldIdWorldWikiRouteWithChildren =
  WorldWorldIdWorldWikiRoute._addFileChildren(
    WorldWorldIdWorldWikiRouteChildren,
  )

interface WorldWorldIdWorldRouteChildren {
  WorldWorldIdWorldActorsRoute: typeof WorldWorldIdWorldActorsRoute
  WorldWorldIdWorldOverviewRoute: typeof WorldWorldIdWorldOverviewRoute
  WorldWorldIdWorldSettingsRoute: typeof WorldWorldIdWorldSettingsRoute
  WorldWorldIdWorldTimelineRoute: typeof WorldWorldIdWorldTimelineRouteWithChildren
  WorldWorldIdWorldWikiRoute: typeof WorldWorldIdWorldWikiRouteWithChildren
}

const WorldWorldIdWorldRouteChildren: WorldWorldIdWorldRouteChildren = {
  WorldWorldIdWorldActorsRoute: WorldWorldIdWorldActorsRoute,
  WorldWorldIdWorldOverviewRoute: WorldWorldIdWorldOverviewRoute,
  WorldWorldIdWorldSettingsRoute: WorldWorldIdWorldSettingsRoute,
  WorldWorldIdWorldTimelineRoute: WorldWorldIdWorldTimelineRouteWithChildren,
  WorldWorldIdWorldWikiRoute: WorldWorldIdWorldWikiRouteWithChildren,
}

const WorldWorldIdWorldRouteWithChildren =
  WorldWorldIdWorldRoute._addFileChildren(WorldWorldIdWorldRouteChildren)

interface WorldWorldIdRouteChildren {
  WorldWorldIdWorldRoute: typeof WorldWorldIdWorldRouteWithChildren
}

const WorldWorldIdRouteChildren: WorldWorldIdRouteChildren = {
  WorldWorldIdWorldRoute: WorldWorldIdWorldRouteWithChildren,
}

const WorldWorldIdRouteWithChildren = WorldWorldIdRoute._addFileChildren(
  WorldWorldIdRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/home': typeof HomeRoute
  '/limbo': typeof LimboRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/secret/music': typeof SecretMusicRoute
  '/secret/spinny': typeof SecretSpinnyRoute
  '/world/$worldId': typeof WorldWorldIdWorldRouteWithChildren
  '/world/$worldId/actors': typeof WorldWorldIdWorldActorsRoute
  '/world/$worldId/overview': typeof WorldWorldIdWorldOverviewRoute
  '/world/$worldId/settings': typeof WorldWorldIdWorldSettingsRoute
  '/world/$worldId/timeline': typeof WorldWorldIdWorldTimelineTimelineRouteWithChildren
  '/world/$worldId/wiki': typeof WorldWorldIdWorldWikiWikiRouteWithChildren
  '/world/$worldId/timeline/outliner': typeof WorldWorldIdWorldTimelineTimelineOutlinerRoute
  '/world/$worldId/wiki/$articleId': typeof WorldWorldIdWorldWikiWikiArticleIdRoute
  '/world/$worldId/wiki/': typeof WorldWorldIdWorldWikiWikiIndexRoute
  '/world/$worldId/timeline/actor/$actorId': typeof WorldWorldIdWorldTimelineTimelineActorActorIdRoute
  '/world/$worldId/timeline/event/$eventId': typeof WorldWorldIdWorldTimelineTimelineEventEventIdRoute
  '/world/$worldId/timeline/event/create': typeof WorldWorldIdWorldTimelineTimelineEventCreateRoute
  '/world/$worldId/timeline/delta/$deltaId/$eventId': typeof WorldWorldIdWorldTimelineTimelineDeltaDeltaIdEventIdRoute
  '/world/$worldId/timeline/delta/create/$eventId': typeof WorldWorldIdWorldTimelineTimelineDeltaCreateEventIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/home': typeof HomeRoute
  '/limbo': typeof LimboRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/secret/music': typeof SecretMusicRoute
  '/secret/spinny': typeof SecretSpinnyRoute
  '/world/$worldId': typeof WorldWorldIdWorldRouteWithChildren
  '/world/$worldId/actors': typeof WorldWorldIdWorldActorsRoute
  '/world/$worldId/overview': typeof WorldWorldIdWorldOverviewRoute
  '/world/$worldId/settings': typeof WorldWorldIdWorldSettingsRoute
  '/world/$worldId/timeline': typeof WorldWorldIdWorldTimelineTimelineRouteWithChildren
  '/world/$worldId/wiki': typeof WorldWorldIdWorldWikiWikiIndexRoute
  '/world/$worldId/timeline/outliner': typeof WorldWorldIdWorldTimelineTimelineOutlinerRoute
  '/world/$worldId/wiki/$articleId': typeof WorldWorldIdWorldWikiWikiArticleIdRoute
  '/world/$worldId/timeline/actor/$actorId': typeof WorldWorldIdWorldTimelineTimelineActorActorIdRoute
  '/world/$worldId/timeline/event/$eventId': typeof WorldWorldIdWorldTimelineTimelineEventEventIdRoute
  '/world/$worldId/timeline/event/create': typeof WorldWorldIdWorldTimelineTimelineEventCreateRoute
  '/world/$worldId/timeline/delta/$deltaId/$eventId': typeof WorldWorldIdWorldTimelineTimelineDeltaDeltaIdEventIdRoute
  '/world/$worldId/timeline/delta/create/$eventId': typeof WorldWorldIdWorldTimelineTimelineDeltaCreateEventIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/home': typeof HomeRoute
  '/limbo': typeof LimboRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/secret/music': typeof SecretMusicRoute
  '/secret/spinny': typeof SecretSpinnyRoute
  '/world/$worldId': typeof WorldWorldIdRouteWithChildren
  '/world/$worldId/_world': typeof WorldWorldIdWorldRouteWithChildren
  '/world/$worldId/_world/actors': typeof WorldWorldIdWorldActorsRoute
  '/world/$worldId/_world/overview': typeof WorldWorldIdWorldOverviewRoute
  '/world/$worldId/_world/settings': typeof WorldWorldIdWorldSettingsRoute
  '/world/$worldId/_world/timeline': typeof WorldWorldIdWorldTimelineRouteWithChildren
  '/world/$worldId/_world/timeline/_timeline': typeof WorldWorldIdWorldTimelineTimelineRouteWithChildren
  '/world/$worldId/_world/wiki': typeof WorldWorldIdWorldWikiRouteWithChildren
  '/world/$worldId/_world/wiki/_wiki': typeof WorldWorldIdWorldWikiWikiRouteWithChildren
  '/world/$worldId/_world/timeline/_timeline/outliner': typeof WorldWorldIdWorldTimelineTimelineOutlinerRoute
  '/world/$worldId/_world/wiki/_wiki/$articleId': typeof WorldWorldIdWorldWikiWikiArticleIdRoute
  '/world/$worldId/_world/wiki/_wiki/': typeof WorldWorldIdWorldWikiWikiIndexRoute
  '/world/$worldId/_world/timeline/_timeline/actor/$actorId': typeof WorldWorldIdWorldTimelineTimelineActorActorIdRoute
  '/world/$worldId/_world/timeline/_timeline/event/$eventId': typeof WorldWorldIdWorldTimelineTimelineEventEventIdRoute
  '/world/$worldId/_world/timeline/_timeline/event/create': typeof WorldWorldIdWorldTimelineTimelineEventCreateRoute
  '/world/$worldId/_world/timeline/_timeline/delta/$deltaId/$eventId': typeof WorldWorldIdWorldTimelineTimelineDeltaDeltaIdEventIdRoute
  '/world/$worldId/_world/timeline/_timeline/delta/create/$eventId': typeof WorldWorldIdWorldTimelineTimelineDeltaCreateEventIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/home'
    | '/limbo'
    | '/login'
    | '/register'
    | '/secret/music'
    | '/secret/spinny'
    | '/world/$worldId'
    | '/world/$worldId/actors'
    | '/world/$worldId/overview'
    | '/world/$worldId/settings'
    | '/world/$worldId/timeline'
    | '/world/$worldId/wiki'
    | '/world/$worldId/timeline/outliner'
    | '/world/$worldId/wiki/$articleId'
    | '/world/$worldId/wiki/'
    | '/world/$worldId/timeline/actor/$actorId'
    | '/world/$worldId/timeline/event/$eventId'
    | '/world/$worldId/timeline/event/create'
    | '/world/$worldId/timeline/delta/$deltaId/$eventId'
    | '/world/$worldId/timeline/delta/create/$eventId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/home'
    | '/limbo'
    | '/login'
    | '/register'
    | '/secret/music'
    | '/secret/spinny'
    | '/world/$worldId'
    | '/world/$worldId/actors'
    | '/world/$worldId/overview'
    | '/world/$worldId/settings'
    | '/world/$worldId/timeline'
    | '/world/$worldId/wiki'
    | '/world/$worldId/timeline/outliner'
    | '/world/$worldId/wiki/$articleId'
    | '/world/$worldId/timeline/actor/$actorId'
    | '/world/$worldId/timeline/event/$eventId'
    | '/world/$worldId/timeline/event/create'
    | '/world/$worldId/timeline/delta/$deltaId/$eventId'
    | '/world/$worldId/timeline/delta/create/$eventId'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/home'
    | '/limbo'
    | '/login'
    | '/register'
    | '/secret/music'
    | '/secret/spinny'
    | '/world/$worldId'
    | '/world/$worldId/_world'
    | '/world/$worldId/_world/actors'
    | '/world/$worldId/_world/overview'
    | '/world/$worldId/_world/settings'
    | '/world/$worldId/_world/timeline'
    | '/world/$worldId/_world/timeline/_timeline'
    | '/world/$worldId/_world/wiki'
    | '/world/$worldId/_world/wiki/_wiki'
    | '/world/$worldId/_world/timeline/_timeline/outliner'
    | '/world/$worldId/_world/wiki/_wiki/$articleId'
    | '/world/$worldId/_world/wiki/_wiki/'
    | '/world/$worldId/_world/timeline/_timeline/actor/$actorId'
    | '/world/$worldId/_world/timeline/_timeline/event/$eventId'
    | '/world/$worldId/_world/timeline/_timeline/event/create'
    | '/world/$worldId/_world/timeline/_timeline/delta/$deltaId/$eventId'
    | '/world/$worldId/_world/timeline/_timeline/delta/create/$eventId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRoute
  HomeRoute: typeof HomeRoute
  LimboRoute: typeof LimboRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  SecretMusicRoute: typeof SecretMusicRoute
  SecretSpinnyRoute: typeof SecretSpinnyRoute
  WorldWorldIdRoute: typeof WorldWorldIdRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRoute,
  HomeRoute: HomeRoute,
  LimboRoute: LimboRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  SecretMusicRoute: SecretMusicRoute,
  SecretSpinnyRoute: SecretSpinnyRoute,
  WorldWorldIdRoute: WorldWorldIdRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/home",
        "/limbo",
        "/login",
        "/register",
        "/secret/music",
        "/secret/spinny",
        "/world/$worldId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin.tsx"
    },
    "/home": {
      "filePath": "home.tsx"
    },
    "/limbo": {
      "filePath": "limbo.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/secret/music": {
      "filePath": "secret/music.tsx"
    },
    "/secret/spinny": {
      "filePath": "secret/spinny.tsx"
    },
    "/world/$worldId": {
      "filePath": "world.$worldId",
      "children": [
        "/world/$worldId/_world"
      ]
    },
    "/world/$worldId/_world": {
      "filePath": "world.$worldId/_world.tsx",
      "parent": "/world/$worldId",
      "children": [
        "/world/$worldId/_world/actors",
        "/world/$worldId/_world/overview",
        "/world/$worldId/_world/settings",
        "/world/$worldId/_world/timeline",
        "/world/$worldId/_world/wiki"
      ]
    },
    "/world/$worldId/_world/actors": {
      "filePath": "world.$worldId/_world.actors.tsx",
      "parent": "/world/$worldId/_world"
    },
    "/world/$worldId/_world/overview": {
      "filePath": "world.$worldId/_world.overview.tsx",
      "parent": "/world/$worldId/_world"
    },
    "/world/$worldId/_world/settings": {
      "filePath": "world.$worldId/_world.settings.tsx",
      "parent": "/world/$worldId/_world"
    },
    "/world/$worldId/_world/timeline": {
      "filePath": "world.$worldId/_world.timeline",
      "parent": "/world/$worldId/_world",
      "children": [
        "/world/$worldId/_world/timeline/_timeline"
      ]
    },
    "/world/$worldId/_world/timeline/_timeline": {
      "filePath": "world.$worldId/_world.timeline/_timeline.tsx",
      "parent": "/world/$worldId/_world/timeline",
      "children": [
        "/world/$worldId/_world/timeline/_timeline/outliner",
        "/world/$worldId/_world/timeline/_timeline/actor/$actorId",
        "/world/$worldId/_world/timeline/_timeline/event/$eventId",
        "/world/$worldId/_world/timeline/_timeline/event/create",
        "/world/$worldId/_world/timeline/_timeline/delta/$deltaId/$eventId",
        "/world/$worldId/_world/timeline/_timeline/delta/create/$eventId"
      ]
    },
    "/world/$worldId/_world/wiki": {
      "filePath": "world.$worldId/_world.wiki",
      "parent": "/world/$worldId/_world",
      "children": [
        "/world/$worldId/_world/wiki/_wiki"
      ]
    },
    "/world/$worldId/_world/wiki/_wiki": {
      "filePath": "world.$worldId/_world.wiki/_wiki.tsx",
      "parent": "/world/$worldId/_world/wiki",
      "children": [
        "/world/$worldId/_world/wiki/_wiki/$articleId",
        "/world/$worldId/_world/wiki/_wiki/"
      ]
    },
    "/world/$worldId/_world/timeline/_timeline/outliner": {
      "filePath": "world.$worldId/_world.timeline/_timeline/outliner.tsx",
      "parent": "/world/$worldId/_world/timeline/_timeline"
    },
    "/world/$worldId/_world/wiki/_wiki/$articleId": {
      "filePath": "world.$worldId/_world.wiki/_wiki.$articleId.tsx",
      "parent": "/world/$worldId/_world/wiki/_wiki"
    },
    "/world/$worldId/_world/wiki/_wiki/": {
      "filePath": "world.$worldId/_world.wiki/_wiki.index.tsx",
      "parent": "/world/$worldId/_world/wiki/_wiki"
    },
    "/world/$worldId/_world/timeline/_timeline/actor/$actorId": {
      "filePath": "world.$worldId/_world.timeline/_timeline/actor.$actorId.tsx",
      "parent": "/world/$worldId/_world/timeline/_timeline"
    },
    "/world/$worldId/_world/timeline/_timeline/event/$eventId": {
      "filePath": "world.$worldId/_world.timeline/_timeline/event.$eventId.tsx",
      "parent": "/world/$worldId/_world/timeline/_timeline"
    },
    "/world/$worldId/_world/timeline/_timeline/event/create": {
      "filePath": "world.$worldId/_world.timeline/_timeline/event.create.tsx",
      "parent": "/world/$worldId/_world/timeline/_timeline"
    },
    "/world/$worldId/_world/timeline/_timeline/delta/$deltaId/$eventId": {
      "filePath": "world.$worldId/_world.timeline/_timeline/delta.$deltaId.$eventId.tsx",
      "parent": "/world/$worldId/_world/timeline/_timeline"
    },
    "/world/$worldId/_world/timeline/_timeline/delta/create/$eventId": {
      "filePath": "world.$worldId/_world.timeline/_timeline/delta.create.$eventId.tsx",
      "parent": "/world/$worldId/_world/timeline/_timeline"
    }
  }
}
ROUTE_MANIFEST_END */
