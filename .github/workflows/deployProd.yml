name: Deploy Production

on:
  workflow_dispatch:  # Allows manual trigger from GitHub UI

concurrency:
  group: 'deploy'
  cancel-in-progress: false

jobs:
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # - name: Configure Git
      #   run: |
      #     git config --global user.name "github-actions[bot]"
      #     git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Merge dev into master
        run: |
          git checkout master
          git pull origin master
          git merge origin/dev --no-ff --no-edit || (git merge --abort && exit 1)
          git push origin master

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $(doctl compute droplet get prod-manager-1 --format PublicIPv4 --no-header) >> ~/.ssh/known_hosts

      - name: Backup Database
        run: doctl compute ssh prod-manager-1 --ssh-command "cd timelines && ./scripts/stack-db-backup.sh"
      
      - name: Find latest version
        id: version
        run: |
          latest_version=$(git tag --sort=committerdate | tail -1)
          echo "version=$latest_version" >> $GITHUB_OUTPUT 
      
      - name: Deploy to DigitalOcean
        run: doctl compute ssh prod-manager-1 --ssh-command "cd timelines && VERSION=${{ steps.version.outputs.version }} ./scripts/stack-update.sh" 

      - name: Run migrations
        run: doctl compute ssh prod-manager-1 --ssh-command "cd timelines && git pull && ./scripts/stack-migrate.sh"
