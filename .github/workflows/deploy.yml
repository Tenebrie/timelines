name: Run Tests

on:
  push:
    branches: [master]

jobs:
  test-styx:
    name: Test Styx (Frontend)
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'yarn'
    - run: yarn
    - run: yarn test:styx
    
  test-rhea:
    name: Test Rhea (Backend)
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'yarn'
    - run: yarn
    - run: yarn test:rhea

  build-container:
    name: Build & Publish Containers
    runs-on: ubuntu-latest
    needs: [test-styx, test-rhea]
    permissions:
      packages: write
      contents: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'yarn'

    - name: Generate Version Number
      id: version
      uses: paulhatch/semantic-version@v5.4.0
      with:
        major_pattern: "major:"
        minor_pattern: "feat:"
        version_format: "v${major}.${minor}.${patch}"
        debug: true

    # - name: Create a Release
    #   uses: elgohr/Github-Release-Action@v5
    #   env:
    #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag: ${{ steps.version.outputs.version }}
    #     title: Release ${{ steps.version.outputs.version }}

    - name: Log in to Docker Hub
      uses: docker/login-action@v3.3.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    # - name: Build & Publish
    #   run: yarn docker:prod:push
    #   env:
    #     VERSION: ${{ steps.version.outputs.version }}

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
    - name: Import SSH key
      run: |
        echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Deploy to DigitalOcean
      run: doctl compute ssh prod-manager-1 --ssh-command "cd timelines && git pull && VERSION=${{ steps.version.outputs.version }} ./scripts/stack-update.sh"
    
